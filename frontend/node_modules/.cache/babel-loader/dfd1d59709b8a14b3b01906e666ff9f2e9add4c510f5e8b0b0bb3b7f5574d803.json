{"ast":null,"code":"var _jsxFileName = \"/usr/local/bin/yousub/frontend/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = props => {\n  _s();\n  const [videoLink, setVideoLink] = useState('');\n  const [videoSource, setVideoSource] = useState('');\n  useEffect(() => {\n    const {\n      username\n    } = props;\n    getNewVideo(username);\n  }, [props.username]);\n  const getNewVideo = username => {\n    if (username === null || username === '') {\n      return;\n    }\n    const data = {\n      username: username\n    };\n    fetch('https://yousub-api.nassing.tk/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error getting video');\n      }\n    }).then(data => {\n      setVideoLink(require(`../resources/videos/${data.link}`));\n      setVideoSource(data.source);\n    }).catch(error => console.log(error.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"video-player-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-player\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoLink,\n        controls: true,\n        loop: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoSource,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"iICzlzH73gxvWTWvxDzbfGsWUok=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoPlayer","props","_s","videoLink","setVideoLink","videoSource","setVideoSource","username","getNewVideo","data","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","require","link","source","catch","error","console","log","message","id","children","src","controls","loop","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/local/bin/yousub/frontend/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/VideoPlayer.css';\n\nconst VideoPlayer = (props) => {\n  const [videoLink, setVideoLink] = useState('');\n  const [videoSource, setVideoSource] = useState('');\n\n  useEffect(() => {\n    const { username } = props;\n    getNewVideo(username);\n  }, [props.username]);\n\n  const getNewVideo = (username) => {\n    if (username === null || username === '') {\n      return;\n    }\n\n    const data = {\n      username: username\n    };\n\n    fetch('https://yousub-api.nassing.tk/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Error getting video');\n        }\n      })\n      .then(data => {\n        setVideoLink(require(`../resources/videos/${data.link}`));\n        setVideoSource(data.source);\n      })\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <div id=\"video-player-wrapper\">\n      <div id=\"video-player\">\n        <video src={videoLink} controls loop>\n          <source src={videoSource} type=\"video/mp4\" />\n        </video>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAM;MAAEU;IAAS,CAAC,GAAGN,KAAK;IAC1BO,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC,EAAE,CAACN,KAAK,CAACM,QAAQ,CAAC,CAAC;EAEpB,MAAMC,WAAW,GAAID,QAAQ,IAAK;IAChC,IAAIA,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,EAAE,EAAE;MACxC;IACF;IAEA,MAAME,IAAI,GAAG;MACXF,QAAQ,EAAEA;IACZ,CAAC;IAEDG,KAAK,CAAC,gCAAgC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CACCO,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC,CACDJ,IAAI,CAACP,IAAI,IAAI;MACZL,YAAY,CAACiB,OAAO,CAAE,uBAAsBZ,IAAI,CAACa,IAAK,EAAC,CAAC,CAAC;MACzDhB,cAAc,CAACG,IAAI,CAACc,MAAM,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;EAC/C,CAAC;EAED,oBACE7B,OAAA;IAAK8B,EAAE,EAAC,sBAAsB;IAAAC,QAAA,eAC5B/B,OAAA;MAAK8B,EAAE,EAAC,cAAc;MAAAC,QAAA,eACpB/B,OAAA;QAAOgC,GAAG,EAAE5B,SAAU;QAAC6B,QAAQ;QAACC,IAAI;QAAAH,QAAA,eAClC/B,OAAA;UAAQgC,GAAG,EAAE1B,WAAY;UAAC6B,IAAI,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACpC,EAAA,CAhDIF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}